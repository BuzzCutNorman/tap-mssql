[tool.poetry]
name = "tap-mssql"
version = "0.1.0"
description = "`tap-mssql` is a Singer tap for mssql, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Dan Norman <buzzcutnorman@gmail.com>"]
keywords = [
    "ELT",
    "mssql",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.9"
singer-sdk = { version="~=0.44.1", extras = [] }
fs-s3fs = { version = "~=1.1.1", optional = true }
pyodbc = "^5.2.0"
pymssql = "^2.3.2"
msgspec = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8"
singer-sdk = { version="~=0.44.1", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.pytest.ini_options]
addopts = [
    "--durations=10",
]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
plugins = "sqlmypy"

[tool.ruff]
src = ["tap_mssql"]
target-version = "py39"

[tool.ruff.lint]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_mssql"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-mssql = 'tap_mssql.tap:Tapmssql.cli'
